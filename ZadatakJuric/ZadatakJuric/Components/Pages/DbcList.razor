@page "/dbc-list"
@using ZadatakJuric.Application.DBCParser.Dto
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>DBC Files</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-0">DBC Files</h2>
                    <p class="text-muted">View all parsed DBC files</p>
                </div>
                <NavLink href="/dbc-upload" class="btn btn-primary">
                    <i class="bi bi-cloud-upload"></i> Upload New DBC
                </NavLink>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center p-5">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading DBC files...</p>
        </div>
    }
    else if (dbcFiles == null || !dbcFiles.Any())
    {
        <div class="text-center p-5">
            <i class="bi bi-inbox text-muted" style="font-size: 3rem;"></i>
            <h4 class="mt-3">No DBC Files Found</h4>
            <p class="text-muted">Upload your first DBC file to get started.</p>
            <NavLink href="/dbc-upload" class="btn btn-primary">
                <i class="bi bi-cloud-upload"></i> Upload DBC File
            </NavLink>
        </div>
    }
    else
    {
        <!-- Summary Stats -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card border-primary">
                    <div class="card-body text-center">
                        <i class="bi bi-file-earmark-binary text-primary fs-1"></i>
                        <h4 class="mt-2 mb-0">@dbcFiles.Count()</h4>
                        <small class="text-muted">DBC Files</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-success">
                    <div class="card-body text-center">
                        <i class="bi bi-chat-dots text-success fs-1"></i>
                        <h4 class="mt-2 mb-0">@dbcFiles.Sum(d => d.TotalMessages)</h4>
                        <small class="text-muted">Total Messages</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-warning">
                    <div class="card-body text-center">
                        <i class="bi bi-signal text-warning fs-1"></i>
                        <h4 class="mt-2 mb-0">@dbcFiles.Sum(d => d.TotalSignals)</h4>
                        <small class="text-muted">Total Signals</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-info">
                    <div class="card-body text-center">
                        <i class="bi bi-tags text-info fs-1"></i>
                        <h4 class="mt-2 mb-0">@dbcFiles.Sum(d => d.TotalAttributes)</h4>
                        <small class="text-muted">Total Attributes</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- DBC Files Table -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">DBC Files</h5>
                <button class="btn btn-outline-secondary btn-sm" @onclick="LoadData">
                    <i class="bi bi-arrow-clockwise"></i> Refresh
                </button>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>File Name</th>
                                <th>Version</th>
                                <th>File Size</th>
                                <th>Created</th>
                                <th>Messages</th>
                                <th>Signals</th>
                                <th>Attributes</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var dbc in dbcFiles)
                            {
                                <tr>
                                    <td>
                                        <div>
                                            <button class="btn btn-link p-0 text-start" style="text-decoration: none;" 
                                                    @onclick="() => ViewDetails(dbc.Id)">
                                                <strong class="text-primary">@dbc.NetworkName</strong>
                                            </button>
                                            @if (!string.IsNullOrEmpty(dbc.Description))
                                            {
                                                <br><small class="text-muted">@dbc.Description</small>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@dbc.Version</span>
                                    </td>
                                    <td>@dbc.FileSize</td>
                                    <td>
                                        <div>
                                            @dbc.CreatedAt.ToString("yyyy-MM-dd")
                                            <br><small class="text-muted">@dbc.CreatedAt.ToString("HH:mm")</small>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-success">@dbc.TotalMessages</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-warning">@dbc.TotalSignals</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@dbc.TotalAttributes</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<DBCOverviewItemDto>? dbcFiles;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        isLoading = true;
        
        try
        {
            // Load all DBC files using the API endpoint
            Console.WriteLine($"Making API call to: {Http.BaseAddress}api/dbcparsing/overview");
            
            var response = await Http.GetFromJsonAsync<DBCOverviewResponse>("api/dbcparsing/overview?page=1&pageSize=50");
            dbcFiles = response?.Networks ?? new List<DBCOverviewItemDto>();
            
            Console.WriteLine($"API Response received. Networks count: {response?.Networks?.Count ?? 0}");
            Console.WriteLine($"Final dbcFiles count: {dbcFiles.Count}");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HTTP Error loading DBC files: {ex.Message}");
            dbcFiles = new List<DBCOverviewItemDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading DBC files: {ex.Message}");
            dbcFiles = new List<DBCOverviewItemDto>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ViewDetails(int id)
    {
        Navigation.NavigateTo($"/dbc-details/{id}");
    }


} 