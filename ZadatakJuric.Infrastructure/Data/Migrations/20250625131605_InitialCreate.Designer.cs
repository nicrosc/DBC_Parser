// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZadatakJuric.Infrastructure.Data;

#nullable disable

namespace ZadatakJuric.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DBCDbContext))]
    [Migration("20250625131605_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EnumValues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IntegerValue")
                        .HasColumnType("integer");

                    b.Property<double?>("MaxValue")
                        .HasColumnType("double precision");

                    b.Property<int?>("MessageId")
                        .HasColumnType("integer");

                    b.Property<double?>("MinValue")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("NetworkId")
                        .HasColumnType("integer");

                    b.Property<double>("NumericValue")
                        .HasColumnType("double precision");

                    b.Property<string>("SelectedEnumValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SignalId")
                        .HasColumnType("integer");

                    b.Property<string>("StringValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("SignalId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("NetworkId")
                        .HasColumnType("integer");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<byte>("Size")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Network", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Signal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ByteOrder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<double>("Factor")
                        .HasColumnType("double precision");

                    b.Property<byte>("Length")
                        .HasColumnType("smallint");

                    b.Property<double>("Maximum")
                        .HasColumnType("double precision");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer");

                    b.Property<double>("Minimum")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<double>("Offset")
                        .HasColumnType("double precision");

                    b.Property<string>("Receivers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("StartBit")
                        .HasColumnType("smallint");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Signals");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Attribute", b =>
                {
                    b.HasOne("ZadatakJuric.Domain.Entities.Message", "Message")
                        .WithMany("Attributes")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZadatakJuric.Domain.Entities.Network", "Network")
                        .WithMany("Attributes")
                        .HasForeignKey("NetworkId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZadatakJuric.Domain.Entities.Signal", "Signal")
                        .WithMany("Attributes")
                        .HasForeignKey("SignalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Message");

                    b.Navigation("Network");

                    b.Navigation("Signal");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Message", b =>
                {
                    b.HasOne("ZadatakJuric.Domain.Entities.Network", "Network")
                        .WithMany("Messages")
                        .HasForeignKey("NetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Network");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Signal", b =>
                {
                    b.HasOne("ZadatakJuric.Domain.Entities.Message", "Message")
                        .WithMany("Signals")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Message", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Signals");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Network", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ZadatakJuric.Domain.Entities.Signal", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
